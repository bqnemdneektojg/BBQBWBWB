from telebot import types
import config
import functions as func

main_menu_btn = [
    'M–µ–Ω—é'
]


def bomber_start_menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='üß® –í—ã–∫–ª—é—á–∏—Ç—å –±–æ–º–±–µ—Ä', callback_data=f'bomb_off'),
    )
    return markup


def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    row_keyboard = [{'text': '–ú–µ–Ω—é'}]
    buttons = func.get_reklama_button()
    this_row = 0
    for button in buttons:
        if len(row_keyboard) == 3:
            this_row = 1
            markup.keyboard.append(row_keyboard)
            row_keyboard = []
        row_keyboard.append({'text': button[1]})
    if this_row == 0:
        markup.keyboard.append(row_keyboard)
    elif row_keyboard != 3 and row_keyboard != 0:
        markup.keyboard.append(row_keyboard)
    return markup


def delete_message():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(types.InlineKeyboardButton(text='‚ùå –ü–æ–Ω—è–ª', callback_data='delete_message'))
    return markup


def how_to_delete():
    markup = types.InlineKeyboardMarkup(row_width=3)
    row_keyboard = [types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='test')]
    buttons = func.get_reklama_button()
    this_row = 0
    for button in buttons:
        if len(row_keyboard) == 3:
            this_row = 1
            markup.keyboard.append(row_keyboard)
            row_keyboard = []
        row_keyboard.append(types.InlineKeyboardButton(button[1], callback_data='del_button=' + button[1]))
    if this_row == 0:
        markup.keyboard.append(row_keyboard)
    elif row_keyboard != 3 and row_keyboard != 0:
        markup.keyboard.append(row_keyboard)
    return markup


def menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='üì≤ –ë–æ–º–±–∏—Ç—å –Ω–æ–º–µ—Ä', callback_data=f'bomb_started'),
    )
    markup.add(
        types.InlineKeyboardButton(text='üåç –°—Ç—Ä–∞–Ω–∞ –ë–æ–º–±–µ–∂–∫–∏', callback_data='country'),
        types.InlineKeyboardButton(text='‚è± –ê–∫—Ç–∏–≤–Ω—ã–µ –ë–æ–º–±–µ–∂–∫–∏ ', callback_data='active_bomb'),
        types.InlineKeyboardButton(text='‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='informations'),
        types.InlineKeyboardButton(text='üñ• –ö–∞–±–∏–Ω–µ—Ç', callback_data='profile'),
    )

    return markup


def info_markup():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton(text='üßëüèª‚Äçüîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url=config.admin_link),
        types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='exit_to_menu'),
    )

    return markup


def country_markup():
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='üá∑üá∫ –†–æ—Å—Å–∏—è', callback_data=f'par_rus'),
    )
    markup.add(
        types.InlineKeyboardButton(text='üá∫üá¶ –£–∫—Ä–∞–∏–Ω–∞', callback_data='par_ua'),
        types.InlineKeyboardButton(text='üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', callback_data='par_kz'),
        types.InlineKeyboardButton(text='üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å', callback_data='par_by'),
        types.InlineKeyboardButton(text='üáµüá± –ü–æ–ª—å—à–∞', callback_data='par_pl'),
        types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='exit_to_menu'),
    )

    return markup


def block_menu(user_id):
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'block_user_{user_id}'),
        types.InlineKeyboardButton(text='–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'unblock_user_{user_id}')
    )
    return markup


def admin_menu():
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—É—é –∫–Ω–æ–ø–∫—É', callback_data='add_reklam_button'),
        types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—É—é –∫–Ω–æ–ø–∫—É', callback_data='delete_reklam_button')
    )
    markup.add(
        types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–µ–∫—Å—Ç', callback_data='edit_reklam_text')
    )

    markup.add(
        types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –±–æ–º–±–µ–∂–∫–∏', callback_data='view_bombesh'),
        types.InlineKeyboardButton(text='–í—ã–∫–ª—é–∏—Ç—å –±–æ–º–±–µ–∂–∫—É', callback_data='off_bombesh')
    )

    markup.add(
        types.InlineKeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data='rassilka'),
        types.InlineKeyboardButton(text='–ù–∞–π—Ç–∏ —é–∑–µ—Ä–∞', callback_data='find_user')
    )

    return markup


def profile_markup():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton(text='üîñ –ë–µ–ª—ã–π –ª–∏—Å—Ç', callback_data='white_list'),
        types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='exit_to_menu'),
    )

    return markup


def exit_menu():
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='exit_to_menu'),
    )

    return markup


def run_bomb():
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton(text='üí£ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ–π—á–∞—Å', callback_data=f'run_now_'),
        types.InlineKeyboardButton(text='üí£ –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫', callback_data=f'run_otlos_')
    )
    markup.add(
        types.InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='exit_to_menu')
    )

    return markup
